{"filter":false,"title":"index.js","tooltip":"/joannatomassoni.github.io/projects/let-s-get-functional/index.js","undoManager":{"mark":13,"position":13,"stack":[[{"start":{"row":154,"column":0},"end":{"row":219,"column":1},"action":"remove","lines":["var topThreeTags = function(array) {","// create a holder object","// create first = 0","// create second = 0","// create third = 0","// create result = []","var holder = {};","var first = 0;","var firstName = null;","var second = 0;","var secondName = null;","var third = 0;","var thirdName = null;","var result = [];","// loop through customers","    // loop through each array[i].tags with iterable j","        // if !holder.array[i].tags[j] create key tags[i][j] in holder equal to value 1 (holder.tags[i][j] = 1)","        // else, if it does exist in holder already, add 1 to value of that key in holder (holder.tags[i][j] += 1)","for (var i = 0; i < array.length; i++) {","  for (var j = 0; j < array[i].tags.length; j++)","  if (!holder[array[i].tags[j]]) {","    holder[array[i].tags[j]] = 1;","  } else {","    holder[array[i].tags[j]] += 1;","  }","} ","// loop through holder object ","    //determine maximum tag value by comparing tags","    // reset first each time","// remove first from holder array","","for (var key in holder) {","  if (holder[key] > first) {","    first = holder[key];","    firstName = key;","  }","}","// remove first from holder array","delete holder[firstName]","// loop through holder object ","    //determine maximum tag value by comparing tags","    // reset second each time","for (var key in holder) {","  if (holder[key] > second) {","    second = holder[key];","    secondName = key;","  }","}","// remove second from holder array","delete holder[secondName]","// loop through holder object ","    //determine maximum tag value by comparing tags","    // reset third each time","for (var key in holder) {","  if (holder[key] > third) {","    third = holder[key];","    thirdName = key;","  }","}","// remove third from holder array","delete holder[thirdName]","// push first, second, third to result array","result.push(firstName, secondName, thirdName);","// return result","return result ","}"],"id":26},{"start":{"row":154,"column":0},"end":{"row":205,"column":0},"action":"insert","lines":["var topThreeTags = function(array) {","  // declare allTags variable","  // pluck tags arrays from customers array, and flatten that array by using reduce with concat","  let allTags = pluck(customers, 'tags').reduce(function(acc, item) {","    return acc.concat(item);","  });","  // console.log(allTags);","","// use reduce to create object whose keys are tag names and values are the number of occurrences of each tag","// let totals = allTags.reduce(function (t, object) {","//   // if the given array element does not exist in totals","//   if (!t[object]) {","//     // add the word as a property of totals and set its value to 1","//     t[object] = 1;","//     // else if it does exist, add 1 to the value","//     } else {","//       t[object]++;","//     }","//     return t;","// }, {});","","// create object of tags and their # occurrences","// using reduce","// object key is name of object, its value is:","// if the key exists, its value plus one, else 0 + 1","let totals = allTags.reduce(function(t, object) {","  t[object] = (t[object] || 0) + 1 ;","  return t;","}, {});","","// console.log(totals);","","  // create array to sort object values","  var sortable = [];","  for (var key in totals) {","    sortable.push([key, totals[key]]);","  }","  // sort array in descending numerical order","  sortable = sortable.sort(function(a,b) {","    return b[1]-a[1];","  });","  // console.log(sortable);","","// use first() to pull first three elements from the sortable array","let topThree = (first(sortable, 3));","// map through topThree to return an array of just the first item of each subarray, or the actual tags","let finalThree = map(topThree, function(tags) {","  return tags[0];","});"," return finalThree;","}",""]}],[{"start":{"row":198,"column":16},"end":{"row":198,"column":17},"action":"insert","lines":["_"],"id":27},{"start":{"row":198,"column":17},"end":{"row":198,"column":18},"action":"insert","lines":["."]}],[{"start":{"row":200,"column":17},"end":{"row":200,"column":18},"action":"insert","lines":["+"],"id":28}],[{"start":{"row":200,"column":17},"end":{"row":200,"column":18},"action":"remove","lines":["+"],"id":29}],[{"start":{"row":200,"column":17},"end":{"row":200,"column":18},"action":"insert","lines":["_"],"id":30},{"start":{"row":200,"column":18},"end":{"row":200,"column":19},"action":"insert","lines":["."]}],[{"start":{"row":204,"column":1},"end":{"row":204,"column":2},"action":"insert","lines":[";"],"id":31}],[{"start":{"row":211,"column":1},"end":{"row":211,"column":2},"action":"insert","lines":[";"],"id":32}],[{"start":{"row":179,"column":0},"end":{"row":179,"column":4},"action":"insert","lines":["    "],"id":33}],[{"start":{"row":180,"column":2},"end":{"row":180,"column":4},"action":"insert","lines":["  "],"id":34}],[{"start":{"row":181,"column":2},"end":{"row":181,"column":4},"action":"insert","lines":["  "],"id":35}],[{"start":{"row":182,"column":0},"end":{"row":182,"column":4},"action":"insert","lines":["    "],"id":36}],[{"start":{"row":180,"column":4},"end":{"row":180,"column":8},"action":"insert","lines":["    "],"id":37}],[{"start":{"row":181,"column":4},"end":{"row":181,"column":8},"action":"insert","lines":["    "],"id":38}],[{"start":{"row":157,"column":16},"end":{"row":157,"column":17},"action":"insert","lines":["_"],"id":39},{"start":{"row":157,"column":17},"end":{"row":157,"column":18},"action":"insert","lines":["."]}]]},"ace":{"folds":[],"customSyntax":"javascript","scrolltop":2702,"scrollleft":0,"selection":{"start":{"row":188,"column":14},"end":{"row":188,"column":14},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":167,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1568844127142,"hash":"31d7ccc900d96e984a8e8f586a6589e37ad7e41c"}